### YamlMime:ManagedReference
items:
- uid: MediaTekDocuments.model.Genre
  commentId: T:MediaTekDocuments.model.Genre
  id: Genre
  parent: MediaTekDocuments.model
  children:
  - MediaTekDocuments.model.Genre.#ctor(System.String,System.String)
  langs:
  - csharp
  - vb
  name: Genre
  nameWithType: Genre
  fullName: MediaTekDocuments.model.Genre
  type: Class
  source:
    remote:
      path: Desktop/brouillon/MediaTekDocuments/model/Genre.cs
      branch: master
      repo: https://github.com/fadwafa02/j.git
    id: Genre
    path: model/Genre.cs
    startLine: 6
  assemblies:
  - MediaTekDocuments
  namespace: MediaTekDocuments.model
  summary: "\nClasse métier Genre : hérite de Categorie\n"
  example: []
  syntax:
    content: 'public class Genre : Categorie'
    content.vb: >-
      Public Class Genre
          Inherits Categorie
  inheritance:
  - System.Object
  - MediaTekDocuments.model.Categorie
  inheritedMembers:
  - MediaTekDocuments.model.Categorie.Id
  - MediaTekDocuments.model.Categorie.Libelle
  - MediaTekDocuments.model.Categorie.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MediaTekDocuments.model.Genre.#ctor(System.String,System.String)
  commentId: M:MediaTekDocuments.model.Genre.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: MediaTekDocuments.model.Genre
  langs:
  - csharp
  - vb
  name: Genre(String, String)
  nameWithType: Genre.Genre(String, String)
  fullName: MediaTekDocuments.model.Genre.Genre(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Desktop/brouillon/MediaTekDocuments/model/Genre.cs
      branch: master
      repo: https://github.com/fadwafa02/j.git
    id: .ctor
    path: model/Genre.cs
    startLine: 8
  assemblies:
  - MediaTekDocuments
  namespace: MediaTekDocuments.model
  syntax:
    content: public Genre(string id, string libelle)
    parameters:
    - id: id
      type: System.String
    - id: libelle
      type: System.String
    content.vb: Public Sub New(id As String, libelle As String)
  overload: MediaTekDocuments.model.Genre.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MediaTekDocuments.model
  commentId: N:MediaTekDocuments.model
  name: MediaTekDocuments.model
  nameWithType: MediaTekDocuments.model
  fullName: MediaTekDocuments.model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MediaTekDocuments.model.Categorie
  commentId: T:MediaTekDocuments.model.Categorie
  parent: MediaTekDocuments.model
  name: Categorie
  nameWithType: Categorie
  fullName: MediaTekDocuments.model.Categorie
- uid: MediaTekDocuments.model.Categorie.Id
  commentId: P:MediaTekDocuments.model.Categorie.Id
  parent: MediaTekDocuments.model.Categorie
  name: Id
  nameWithType: Categorie.Id
  fullName: MediaTekDocuments.model.Categorie.Id
- uid: MediaTekDocuments.model.Categorie.Libelle
  commentId: P:MediaTekDocuments.model.Categorie.Libelle
  parent: MediaTekDocuments.model.Categorie
  name: Libelle
  nameWithType: Categorie.Libelle
  fullName: MediaTekDocuments.model.Categorie.Libelle
- uid: MediaTekDocuments.model.Categorie.ToString
  commentId: M:MediaTekDocuments.model.Categorie.ToString
  parent: MediaTekDocuments.model.Categorie
  name: ToString()
  nameWithType: Categorie.ToString()
  fullName: MediaTekDocuments.model.Categorie.ToString()
  spec.csharp:
  - uid: MediaTekDocuments.model.Categorie.ToString
    name: ToString
    nameWithType: Categorie.ToString
    fullName: MediaTekDocuments.model.Categorie.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MediaTekDocuments.model.Categorie.ToString
    name: ToString
    nameWithType: Categorie.ToString
    fullName: MediaTekDocuments.model.Categorie.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MediaTekDocuments.model.Genre.#ctor*
  commentId: Overload:MediaTekDocuments.model.Genre.#ctor
  name: Genre
  nameWithType: Genre.Genre
  fullName: MediaTekDocuments.model.Genre.Genre
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
